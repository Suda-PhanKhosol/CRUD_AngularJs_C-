#pragma checksum "C:\Users\natthaphonk\Desktop\ProjectMaster_26\WebApplication\Views\Home\AddEmployee.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ed875e445ddb0d1aa6a29e230c6ec4b43b071c62"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_AddEmployee), @"mvc.1.0.view", @"/Views/Home/AddEmployee.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\natthaphonk\Desktop\ProjectMaster_26\WebApplication\Views\_ViewImports.cshtml"
using WebApplication;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\natthaphonk\Desktop\ProjectMaster_26\WebApplication\Views\_ViewImports.cshtml"
using WebApplication.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ed875e445ddb0d1aa6a29e230c6ec4b43b071c62", @"/Views/Home/AddEmployee.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fa0ef8da47a84ffb33e8bc853509aa4fa5703a26", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_AddEmployee : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<WebApplication.Models.EmployeeModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/apps/HomeController.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\Users\natthaphonk\Desktop\ProjectMaster_26\WebApplication\Views\Home\AddEmployee.cshtml"
  
    ViewData["Title"] = "Add Employee";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div ng-controller=""HomeController"" ng-init=""Init();"">
    <section class=""content-header"">
        <div class=""container-fluid"">

            <div class=""row"">
                <div class=""col-sm-10"">
                    <h1>
                        <b> Add Employee </b>
                    </h1>
                </div>

                <div class=""col-sm-2 text-right"">

                    <button type=""button"" ng-show=""mode == 'edit'"" class=""btn btn-success btn-md"" ng-click=""UpdateEmployee()"" data-backdrop=""static"" data-keyboard=""false"">Save</button>
                    <button type=""button"" ng-show=""mode == 'edit'"" class=""btn btn-info btn-md"" ng-click=""GetEmployee()"" data-backdrop=""static"" data-keyboard=""false"">Cancel</button>

                    <button type=""button"" ng-show=""mode != 'edit'"" class=""btn btn-info btn-md"" ng-click=""mode = 'edit'"" data-backdrop=""static"" data-keyboard=""false"">Edit</button>
                    <button type=""button"" ng-show=""mode != 'edit' "" class=""btn btn-suc");
            WriteLiteral(@"cess btn-md"" ng-click=""showEmpInsert()"" data-backdrop=""static"" data-keyboard=""false"">Add</button>
                </div>

            </div>
        </div>
    </section>

    <!--Modal Insert -->
    <div class=""modal fade"" id=""modal-xl"">
        <div class=""modal-dialog modal-md"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h4 class=""modal-title"">
                        <i class=""fas fa-user-plus""></i>
                        Add Employee
                    </h4>
                </div>

                <div class=""modal-body"">
                    <div class=""form-group"">
                        <label><b>Department</b></label>
                        <select class=""form-control"" ng-model=""emp.DepartmentId"" ng-options=""item.id as item.name for item in model.Departments""></select>
                    </div>
                    <div class=""form-group"">
                        <label><b>EN.</b></label>
                       ");
            WriteLiteral(@" <input class=""form-control"" type=""text"" ng-model=""emp.En"" />
                    </div>
                    <div class=""form-group"">
                        <label><b>Name</b></label>
                        <input class=""form-control"" ng-model=""emp.Name"" />
                    </div>
                    <div class=""form-group"">
                        <label><b>Age</b></label>
                        <input class=""form-control"" type=""number"" ng-model=""emp.Age"" />
                    </div>
                    <div class=""form-group"">
                        <label><b>Salary</b></label>
                        <input class=""form-control"" type=""number"" ng-model=""emp.Salary"" />
                    </div>
                </div>
                <div class=""modal-body"">
                    <pre>{{emp | json}}</pre>
                </div>
                <div class=""modal-footer justify-content-between"">
                    <button class=""btn btn-default"" type=""button"" data-dismiss=""modal"">Close");
            WriteLiteral(@"</button>
                    <button class=""btn btn-success btn-md"" ng-click=""InsertEmployee(emp);"">Add</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
    </div>

    <!--Modal Update -->
    <div class=""modal fade"" id=""modal-up"">
        <div class=""modal-dialog modal-md"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h4 class=""modal-title"">
                        <i class=""fas fa-user-plus""></i>
                        Edit Employee
                    </h4>
                </div>

                <div class=""modal-body"">
                    <div class=""form-group"">
                        <label><b>Salary</b></label>
                        <input class=""form-control"" type=""number"" ng-model=""emp.Salary"" />
                    </div>
                </div>
                <div class=""modal-footer justify-content-between"">
                    <button class=""btn btn-def");
            WriteLiteral(@"ault"" type=""button"" data-dismiss=""modal"">Cancle</button>
                    <button class=""btn btn-success btn-md"" ng-click=""InsertEmployee(emp);"">Save</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
    </div>

    <!--Table-->
    <section class=""content"">
        <div class=""container-fluid"">
            <div class=""row"">
                <div class=""col-12"">
                    <div class=""card"">

                        <div class=""card-header text-right "">
                            <input type=""text"" ng-model=""search"" />
                        </div>
                        <div class=""card-header row"">
                            <!-- /.card-header -->
                            <div class=""card-body"">
                                <table  class=""table table-bordered"">
                                    <thead class=""table-dark"">
                                        <tr class=""text-center"">
                        ");
            WriteLiteral(@"                    <th style=""width:5%;"">No.</th>
                                            <th style=""width:20%;"">Department</th>
                                            <th style=""width:10%;"">EN.</th>
                                            <th style=""width:20%;"">Name</th>
                                            <th style=""width:50px;"">Age</th>
                                            <th style=""width:50px;"">Salary</th>
                                            <th style=""width:10%;"" >Alive</th>h>
                                            <th style=""width:50px;"" ng-show=""mode =='edit'"">Action</th>h>

                                        </tr>
                                    </thead>

                                    <tbody>
");
            WriteLiteral(@"                                        <tr ng-show=""mode !='edit'"" ng-repeat=""item in model.Items | filter: search | orderBy : 'department.name' "">
                                            <td>{{$index+1}}</td>
                                            <td>{{item.department.name}}</td>
                                            <td>{{item.en}}</td>
                                            <td>{{item.name}}</td>
                                            <td>{{item.age}}</td>
                                            <td>{{item.salary|number}}</td>
                                            <td>
                                                <select disabled class=""form-control""
                                                        ng-model=""item.alive""
                                                        ng-options=""item.Value as item.Text for item in alives"">
                                                </select>
                                            </td>

        ");
            WriteLiteral("                                </tr>\r\n");
            WriteLiteral(@"                                    <tr ng-show=""mode=='edit'"" ng-repeat=""item in model.Items | filter: search | orderBy : 'department.name' "">
                                        <td>{{$index+1}}</td>
                                        <td>
                                            <select class=""form-control"" ng-model=""item.departmentId"" ng-options=""item.id as item.name for item in departments""></select>
                                        </td>
                                        <td>
                                            <input class=""form-control"" ng-model=""item.en"" type=""text"" disabled />
                                        </td>
                                        <td>
                                            <input class=""form-control"" ng-model=""item.name"" type=""text"" />
                                        </td>
                                        <td>
                                            <input class=""form-control"" ng-model=""item.age"" typ");
            WriteLiteral(@"e=""number"" />
                                        </td>
                                        <td>
                                            <input class=""form-control"" ng-model=""item.salary"" type=""number"" />
                                        </td>
                                        <td>
                                            <select class=""form-control"" ng-model=""item.alive"" ng-options=""item.Value as item.Text for item in alives""></select>
                                        </td>
                                        <td>
                                            <button class=""btn btn-danger btn-sm"" ng-click=""DeleteEmployee(item)"">Delete</button>
                                        </td>
                                    </tr>
                                    </tbody>
                                </table>

");
            WriteLiteral(@"                                <div class=""modal-""><pre>{{item | json}}</pre></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>




");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed875e445ddb0d1aa6a29e230c6ec4b43b071c6213579", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<WebApplication.Models.EmployeeModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
